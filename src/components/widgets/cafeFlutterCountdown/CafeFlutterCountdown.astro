---
import { Image } from 'astro:assets';
import type { Widget } from '~/types';
import type { ImageMetadata } from 'astro';
import ParallaxSection from '~/components/widgets/ParallaxSection.astro';

import type { CafeFlutterItem } from '~/types';
import { Icon } from 'astro-icon/components';
import { cafeFlutterEvents } from '~/data/mockCafeFlutter';

import noiseImage from '~/assets/images/noise.jpg';
import googleCalendarImage from '~/assets/images/google-calendar-icon.png';
import googleMeetImage from '~/assets/images/google-meet-icon.png';
import countdownBg from '~/assets/images/countdown-bg.jpg';

export interface Props extends Widget {
 noiseImage?: ImageMetadata;
 googleCalendarImage?: ImageMetadata;
 googleMeetImage?: ImageMetadata;
 telegramSkyImg?: ImageMetadata;
 youtubeIconImg?: ImageMetadata;
 telegramLink?: string;
 youtubeLink?: string;
 upcomingEvent?: CafeFlutterItem;
}

const {
 upcomingEvent: propsUpcomingEvent
} = Astro.props;

// پیاده‌سازی endpoint زمان سرور
const getServerTime = async () => {
 try {
   const serverTime = new Date();
   return serverTime;
 } catch {
   return new Date();
 }
};

// دریافت زمان سرور
const now = await getServerTime();

// استفاده از upcomingEvent از props یا محاسبه آن
const upcomingEvent = propsUpcomingEvent || cafeFlutterEvents
 .filter(event => new Date(event.dateTime) > now)
 .sort((a, b) => new Date(a.dateTime).getTime() - new Date(b.dateTime).getTime())[0];

// محاسبه زمان‌های مهم
const eventStartTime = upcomingEvent ? new Date(upcomingEvent.dateTime) : null;
const eventEndTime = eventStartTime ? new Date(eventStartTime.getTime() + (3 * 60 * 60 * 1000)) : null;

// فقط زمانی نمایش می‌دهیم که رویداد وجود داشته باشد و تمام نشده باشد
const shouldRender = Boolean(
 (eventStartTime && now < eventStartTime) || // قبل از شروع رویداد
 (eventStartTime && eventEndTime && now < eventEndTime) // در طول رویداد تا 3 ساعت بعد
);

// اگر رویداد تمام شده باشد، هیچی رندر نمی‌کنیم
if (!shouldRender) return null;

// Helper functions for formatting date and time
const formatDate = (date: Date) => {
 return new Intl.DateTimeFormat('fa-IR', {
   weekday: 'long',
   year: 'numeric',
   month: 'long',
   day: 'numeric',
 }).format(date);
};

const formatTime = (date: Date) => {
 return new Intl.DateTimeFormat('fa-IR', {
   hour: '2-digit',
   minute: '2-digit',
 }).format(date);
};

---


    <div class="flex flex-col justify-between mb-16">

      <div id="countdown-wrapper" class="px-4 lg:px-0 rounded-[32px] lg:rounded-[64px] bg-[#F1F4F8] lg:bg-transparent">
        <!-- Cafe Flutter BG -->
        <div class="h-full rounded-[32px] lg:rounded-[64px] w-full">
          <div class="relative">
            <div
              class="h-full lg:h-[309px] absolute top-0 -translate-y-0 lg:top-1/2 lg:-translate-y-1/2 rounded-[32px] lg:rounded-[64px] overflow-hidden">
              {
                countdownBg && (
                  <ParallaxSection class="opacity-90 lg:-mt-10 hidden lg:block" imageSrc={countdownBg} altText="" />
                )
              }
            </div>

            <div
              class="relative h-full lg:h-[373px] py-8 lg:py-0 flex flex-col items-center justify-center gap-8 lg:gap-0 md:flex-row lg:justify-between">
              <!-- Cafe Flutter title -->
              <div
                class="max-lg:flex-[100%] max-md:flex-auto max-lg:flex-grow w-[458px] max-md:w-full h-[373px] rounded-[32px] sm:rounded-[64px] bg-white shadow-[0px_30px_60px_-30px_rgba(23,51,184,0.30)] overflow-hidden">
                <div class="relative h-full">
                  <!-- noise Image - circles BG Svg -->
                  <div class="relative h-full">
                    <!-- noise Image -->
                    <div id="noiseImg" class="absolute inset-0 opacity-10">
                      <Image src={noiseImage} alt="Background noise pattern" class="w-full h-full object-cover" />
                    </div>

                    <!-- Circles BG Svg -->
                    <div class="w-full h-full relative">
                      <svg
                        id="countdownColorSvg"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 856 773"
                        preserveAspectRatio="xMidYMid meet"
                        style="width: 175%;height: 175%;position: absolute;top: 50%;left: 50%;transform: translate(-50%,-50%);">
                        <g filter="url(#filter0_f_1234_855)">
                          <ellipse cx="506.503" cy="273.131" rx="149.497" ry="73.1307" fill="#BB58FF"></ellipse>
                        </g>
                        <g filter="url(#filter1_f_1234_855)">
                          <ellipse cx="343.695" cy="502.708" rx="143.695" ry="70.2923" fill="#1733B8"></ellipse>
                        </g>
                        <g opacity="0.8">
                          <g filter="url(#filter2_f_1234_855)">
                            <ellipse cx="495.829" cy="292.583" rx="129.171" ry="60.5828" fill="#BB58FF"></ellipse>
                          </g>
                          <g filter="url(#filter3_f_1234_855)">
                            <ellipse cx="355.157" cy="482.769" rx="124.157" ry="58.2314" fill="#1733B8"></ellipse>
                          </g>
                        </g>
                        <defs>
                          <filter
                            id="filter0_f_1234_855"
                            x="157.006"
                            y="0"
                            width="698.994"
                            height="546.261"
                            filterUnits="userSpaceOnUse"
                            color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>
                            <feGaussianBlur stdDeviation="100" result="effect1_foregroundBlur_1234_855"
                            ></feGaussianBlur>
                          </filter>
                          <filter
                            id="filter1_f_1234_855"
                            x="0"
                            y="232.415"
                            width="687.389"
                            height="540.585"
                            filterUnits="userSpaceOnUse"
                            color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>
                            <feGaussianBlur stdDeviation="100" result="effect1_foregroundBlur_1234_855"
                            ></feGaussianBlur>
                          </filter>
                          <filter
                            id="filter2_f_1234_855"
                            x="166.659"
                            y="32"
                            width="658.341"
                            height="521.166"
                            filterUnits="userSpaceOnUse"
                            color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>
                            <feGaussianBlur stdDeviation="100" result="effect1_foregroundBlur_1234_855"
                            ></feGaussianBlur>
                          </filter>
                          <filter
                            id="filter3_f_1234_855"
                            x="31"
                            y="224.537"
                            width="648.314"
                            height="516.463"
                            filterUnits="userSpaceOnUse"
                            color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
                            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"></feBlend>
                            <feGaussianBlur stdDeviation="100" result="effect1_foregroundBlur_1234_855"
                            ></feGaussianBlur>
                          </filter>
                        </defs>
                      </svg>
                    </div>
                  </div>

                  <!-- Cafe Flutter content -->
                  <div
                    class="max-lg:w-full inline-flex items-center justify-center absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 z-10 h-[calc(100%-32px)] w-auto px-4 lg:px-0">
                    <div
                      class="w-[394px] max-lg:w-full h-auto lg:h-[309px] max-lg:h-full bg-[#f9f9f9]/30 rounded-[24px] md:rounded-[64px] border border-white backdrop-blur-[32px] p-4 lg:p-8 max-lg:py-8">
                      <div class="h-[51px] pr-3 border-r-2 border-[#fd6035] mb-4">
                        <!-- Online Meeting title -->
                        <div class="">
                          <div class="w-[100px] h-[26px] text-right text-slate-800 text-lg font-bold">
                            {upcomingEvent ? `کافه فلاتر ${upcomingEvent.number}` : 'کافه فلاتر'}
                          </div>
                        </div>
                        <div class="inline-flex justify-start items-center gap-4 mt-1">
                          <!-- Online Meeting Date -->
                          <div class="flex justify-end items-center gap-1.5">
                            <span class="w-5 h-5">
                              <svg
                                width="20"
                                height="21"
                                viewBox="0 0 20 21"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0_432_635)">
                                  <path
                                    d="M15.8333 2.16667H15V1.33333C15 1.11232 14.9122 0.900358 14.7559 0.744078C14.5996 0.587797 14.3877 0.5 14.1667 0.5C13.9457 0.5 13.7337 0.587797 13.5774 0.744078C13.4211 0.900358 13.3333 1.11232 13.3333 1.33333V2.16667H6.66667V1.33333C6.66667 1.11232 6.57887 0.900358 6.42259 0.744078C6.26631 0.587797 6.05435 0.5 5.83333 0.5C5.61232 0.5 5.40036 0.587797 5.24408 0.744078C5.0878 0.900358 5 1.11232 5 1.33333V2.16667H4.16667C3.062 2.16799 2.00296 2.6074 1.22185 3.38852C0.440735 4.16963 0.00132321 5.22867 0 6.33333L0 16.3333C0.00132321 17.438 0.440735 18.497 1.22185 19.2782C2.00296 20.0593 3.062 20.4987 4.16667 20.5H15.8333C16.938 20.4987 17.997 20.0593 18.7782 19.2782C19.5593 18.497 19.9987 17.438 20 16.3333V6.33333C19.9987 5.22867 19.5593 4.16963 18.7782 3.38852C17.997 2.6074 16.938 2.16799 15.8333 2.16667V2.16667ZM1.66667 6.33333C1.66667 5.67029 1.93006 5.03441 2.3989 4.56557C2.86774 4.09673 3.50363 3.83333 4.16667 3.83333H15.8333C16.4964 3.83333 17.1323 4.09673 17.6011 4.56557C18.0699 5.03441 18.3333 5.67029 18.3333 6.33333V7.16667H1.66667V6.33333ZM15.8333 18.8333H4.16667C3.50363 18.8333 2.86774 18.5699 2.3989 18.1011C1.93006 17.6323 1.66667 16.9964 1.66667 16.3333V8.83333H18.3333V16.3333C18.3333 16.9964 18.0699 17.6323 17.6011 18.1011C17.1323 18.5699 16.4964 18.8333 15.8333 18.8333Z"
                                    fill="#1E293B"></path>
                                  <path
                                    d="M10 14.25C10.6904 14.25 11.25 13.6904 11.25 13C11.25 12.3096 10.6904 11.75 10 11.75C9.30964 11.75 8.75 12.3096 8.75 13C8.75 13.6904 9.30964 14.25 10 14.25Z"
                                    fill="#1E293B"></path>
                                  <path
                                    d="M5.83325 14.25C6.52361 14.25 7.08325 13.6904 7.08325 13C7.08325 12.3096 6.52361 11.75 5.83325 11.75C5.1429 11.75 4.58325 12.3096 4.58325 13C4.58325 13.6904 5.1429 14.25 5.83325 14.25Z"
                                    fill="#1E293B"></path>
                                  <path
                                    d="M14.1667 14.25C14.8571 14.25 15.4167 13.6904 15.4167 13C15.4167 12.3096 14.8571 11.75 14.1667 11.75C13.4764 11.75 12.9167 12.3096 12.9167 13C12.9167 13.6904 13.4764 14.25 14.1667 14.25Z"
                                    fill="#1E293B"></path>
                                </g>
                                <defs>
                                  <clipPath id="clip0_432_635">
                                    <rect width="20" height="20" fill="white" transform="translate(0 0.5)"></rect>
                                  </clipPath>
                                </defs>
                              </svg>
                            </span>
                            <div class="text-right text-slate-800 text-sm font-medium">
                              {upcomingEvent && eventStartTime ? formatDate(eventStartTime) : 'تاریخ نامشخص'}
                            </div>
                          </div>

                          <!-- Online Meeting Time -->
                          <div class="flex justify-end items-center gap-1.5">
                            <span class="w-5 h-5">
                              <svg
                                width="20"
                                height="21"
                                viewBox="0 0 20 21"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <g clip-path="url(#clip0_432_632)">
                                  <path
                                    d="M10 0.5C8.02219 0.5 6.08879 1.08649 4.4443 2.1853C2.79981 3.28412 1.51809 4.8459 0.761209 6.67317C0.00433286 8.50043 -0.193701 10.5111 0.192152 12.4509C0.578004 14.3907 1.53041 16.1725 2.92894 17.5711C4.32746 18.9696 6.10929 19.922 8.0491 20.3079C9.98891 20.6937 11.9996 20.4957 13.8268 19.7388C15.6541 18.9819 17.2159 17.7002 18.3147 16.0557C19.4135 14.4112 20 12.4778 20 10.5C19.9971 7.84872 18.9426 5.30684 17.0679 3.4321C15.1932 1.55736 12.6513 0.502868 10 0.5V0.5ZM10 18.8333C8.35183 18.8333 6.74066 18.3446 5.37025 17.4289C3.99984 16.5132 2.93174 15.2117 2.30101 13.689C1.67028 12.1663 1.50525 10.4908 1.82679 8.87425C2.14834 7.25774 2.94201 5.77288 4.10745 4.60744C5.27289 3.44201 6.75774 2.64833 8.37425 2.32679C9.99076 2.00525 11.6663 2.17027 13.189 2.801C14.7118 3.43173 16.0132 4.49984 16.9289 5.87025C17.8446 7.24066 18.3333 8.85182 18.3333 10.5C18.3309 12.7094 17.4522 14.8276 15.8899 16.3899C14.3276 17.9522 12.2094 18.8309 10 18.8333Z"
                                    fill="#1E293B"></path>
                                  <path
                                    d="M9.99979 5.5C9.77878 5.5 9.56682 5.5878 9.41054 5.74408C9.25426 5.90036 9.16646 6.11232 9.16646 6.33333V9.93749L6.35729 11.6975C6.16943 11.8148 6.03588 12.002 5.98603 12.2179C5.93618 12.4337 5.9741 12.6605 6.09146 12.8483C6.20882 13.0362 6.396 13.1697 6.61182 13.2196C6.82764 13.2694 7.05443 13.2315 7.24229 13.1142L10.4423 11.1142C10.5632 11.0384 10.6626 10.9329 10.7311 10.8077C10.7995 10.6825 10.8346 10.5418 10.8331 10.3992V6.33333C10.8331 6.11232 10.7453 5.90036 10.589 5.74408C10.4328 5.5878 10.2208 5.5 9.99979 5.5Z"
                                    fill="#1E293B"></path>
                                </g>
                                <defs>
                                  <clipPath id="clip0_432_632">
                                    <rect width="20" height="20" fill="white" transform="translate(0 0.5)"></rect>
                                  </clipPath>
                                </defs>
                              </svg>
                            </span>
                            <div class="text-right text-slate-800 text-sm font-medium">
                              {upcomingEvent && eventStartTime ? `ساعت ${formatTime(eventStartTime)}` : 'زمان نامشخص'}
                            </div>
                          </div>
                        </div>
                      </div>

                      <!-- Online Meeting speakers -->
                      {upcomingEvent && upcomingEvent.speakers && (
                      <div id="CafeFlutterSpeakers" class="flex flex-col gap-2 mb-[26px]">
                        {
                          upcomingEvent.speakers.map((speaker) => (
                            <div class="inline-flex h-[50px] justify-start items-center gap-2.5">
                              <Image
                                src={speaker.image.src}
                                class="w-[50px] h-[50px] rounded-2xl shadow border-2 border-white"
                                alt='{speaker.image.alt}'
                                width={50}
                                height={50}
                                format="webp"
                              />
                              <div class="inline-flex flex-col justify-start items-end">
                                <div class="self-stretch text-right text-slate-700 text-base font-medium">
                                  {speaker.name}
                                </div>
                                <div class="w-full sm:w-[270px] text-right text-slate-700 text-sm font-normal line-clamp-1">
                                  {speaker.title}
                                </div>
                              </div>
                            </div>
                          ))
                        }
                      </div>
                      )}
                      <!-- Online Meeting Calendar -->
                      <!-- Calendar & Meet -->
                      <div id="CafeFlutterCalendar" class="h-11 justify-end items-center gap-4 inline-flex flex-col sm:flex-row">
                        {upcomingEvent?.googleCalendarLink && (
                          <a href={upcomingEvent.googleCalendarLink} class="justify-start items-center flex">
                            <div class="p-2.5 bg-white rounded-3xl shadow justify-start items-center gap-2.5 flex relative z-10">
                              <Image src={googleCalendarImage} class="w-[24px] h-[24px]" alt="گوگل کلندر" width={24} height={24} format="webp" />
                            </div>
                            <div class="pl-4 pr-7 py-2 -ms-[22px] bg-white/50 rounded-tl-3xl rounded-bl-3xl shadow justify-start items-center gap-1.5 flex">
                              <div class="text-right text-slate-700 text-xs font-normal">اضافه به گوگل کلندر</div>
                            </div>
                          </a>
                        )}

                        {upcomingEvent?.googleMeetLink && (
                          <a href={upcomingEvent.googleMeetLink} class="justify-start items-center flex">
                            <div class="p-2.5 bg-white rounded-3xl shadow justify-start items-center gap-2.5 flex relative z-10">
                              <Image src={googleMeetImage} class="w-[24px] h-[24px]" alt="گوگل میت" width={24} height={24} format="webp" />
                            </div>
                            <div class="pl-4 pr-7 py-2 -ms-[22px] bg-white/50 rounded-tl-3xl rounded-bl-3xl shadow justify-start items-center gap-1.5 flex">
                              <div class="text-right text-slate-700 text-xs font-normal">لینک گوگل میت</div>
                            </div>
                          </a>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Cafe Flutter Countdown -->
              {shouldRender && (
                <div id="CafeFlutterCountdown" 
                data-meet-link={upcomingEvent?.googleMeetLink}
                data-youtube-link={upcomingEvent?.youtubeLink}
                data-event-number={upcomingEvent?.number}
                data-event-start={eventStartTime?.toISOString()}
                data-event-end={eventEndTime?.toISOString()}
                class="flex flex-col items-center gap-4 lg:gap-8 static lg:absolute w-full lg:w-auto lg:end-[clamp(2.5rem,-3.6538rem+9.6154vw,5rem);] 2xl:end-20 top-full lg:top-1/2 lg:-translate-y-1/2 mt-4 lg:mt-0"
                
                >
                  
                  <div class="live-section w-full flex-col items-center gap-6 p-8 bg-gradient-to-br from-[#1733B8]/10 to-[#fd6035]/10 rounded-[32px] backdrop-blur-xl shadow-2xl border border-white/20 transform transition-all duration-300 hover:scale-[1.02]">
                    <div class="relative">
                      <div class="text-3xl lg:text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-[#1733B8] to-[#fd6035] animate-pulse">
                        در حال برگزاری...
                      </div>
                      <div class="absolute -top-2 -right-2 w-4 h-4 bg-green-500 rounded-full animate-ping"></div>
                    </div>
                    
                    <div class="flex flex-col sm:flex-row gap-4 w-full justify-center">
                      {upcomingEvent?.googleMeetLink && (
                        <a href={upcomingEvent.googleMeetLink} 
                          class="inline-flex items-center justify-center gap-3 px-6 py-3 bg-[#1733B8] text-white rounded-full hover:bg-[#142ca3] transition-all duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg"
                          target="_blank">
                          <Icon name="tabler:video" class="w-6 h-6 animate-pulse" />
                          <span class="font-medium">پیوستن به جلسه</span>
                        </a>
                      )}
                      {upcomingEvent?.youtubeLink && (
                        <a href={upcomingEvent.youtubeLink}
                          class="inline-flex items-center justify-center gap-3 px-6 py-3 bg-[#fd6035] text-white rounded-full hover:bg-[#e54e26] transition-all duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg"
                          target="_blank">
                          <Icon name="tabler:brand-youtube" class="w-6 h-6 animate-pulse" />
                          <span class="font-medium">تماشا در یوتیوب</span>
                        </a>
                      )}
                    </div>
                    
                    <p class="text-center text-slate-700 text-base lg:text-xl font-normal px-4 lg:px-0 bg-white/30 rounded-full py-2 shadow-inner">
                      کافه فلاتر شماره {upcomingEvent?.number} در حال برگزاری است
                    </p>
                  </div>


               
                  <div class="countdown-section opacity-100" 
                  data-countdown-date={upcomingEvent.dateTime.toISOString().split('T')[0]}
                  data-countdown-time={upcomingEvent.dateTime.toTimeString().slice(0, 5)}
                  >

                  
                      <div
                        class="flex flex-wrap flex-row-reverse justify-center lg:justify-start items-center gap-2 lg:gap-1"
                        data-countdown-date={upcomingEvent.dateTime.toISOString().split('T')[0]}
                        data-countdown-time={upcomingEvent.dateTime.toTimeString().slice(0, 5)}
                      >
                        <!-- Day -->
                        <div id="CafeFlutterCountdownDay" class="w-[120px] h-[120px] lg:w-[150px] lg:h-[150px] max-md:flex-[25%] max-sm:flex-[45%]">
                          <div class="w-full h-full flex flex-col justify-center items-center bg-white/50 rounded-[24px] lg:rounded-[32px] shadow backdrop-blur-[5px]">
                            <span id="dataCountdownDay" class="text-center text-slate-700 text-5xl lg:text-7xl font-normal">18</span>
                            <span class="h-[24px] lg:h-[30px] text-center text-slate-500 text-xl lg:text-2xl font-normal">روز</span>
                          </div>
                        </div>
                        <span class="text-center text-slate-500 text-3xl lg:text-[44px] font-normal max-lg:hidden">:</span>
                        <!-- Hour -->
                        <div class="w-[120px] h-[120px] lg:w-[150px] lg:h-[150px] max-md:flex-[25%] max-sm:flex-[45%]">
                          <div class="w-full h-full flex flex-col justify-center items-center bg-white/50 rounded-[24px] lg:rounded-[32px] shadow backdrop-blur-[5px]">
                            <span id="dataCountdownHour" class="text-center text-slate-700 text-5xl lg:text-7xl font-normal">10</span>
                            <span class="h-[24px] lg:h-[30px] text-center text-slate-500 text-xl lg:text-2xl font-normal">ساعت</span>
                          </div>
                        </div>
                        <span class="text-center text-slate-500 text-3xl lg:text-[44px] font-normal max-lg:hidden">:</span>
                        <!-- Minute -->
                        <div class="w-[120px] h-[120px] lg:w-[150px] lg:h-[150px] max-md:flex-[25%] max-sm:flex-[45%]">
                          <div class="w-full h-full flex flex-col justify-center items-center bg-white/50 rounded-[24px] lg:rounded-[32px] shadow backdrop-blur-[5px]">
                            <span id="dataCountdownMinute" class="text-center text-slate-700 text-5xl lg:text-7xl font-normal">45</span>
                            <span class="h-[24px] lg:h-[30px] text-center text-slate-500 text-xl lg:text-2xl font-normal">دقیقه</span>
                          </div>
                        </div>
                        <span class="text-center text-slate-500 text-3xl lg:text-[44px] font-normal max-lg:hidden">:</span>
                        <!-- Second -->
                        <div class="w-[120px] h-[120px] lg:w-[150px] lg:h-[150px] max-md:flex-[25%] max-sm:flex-[45%]">
                          <div class="w-full h-full flex flex-col justify-center items-center bg-white/50 rounded-[24px] lg:rounded-[32px] shadow backdrop-blur-[5px]">
                            <span id="dataCountdownSecond" class="text-center text-slate-700 text-5xl lg:text-7xl font-normal">27</span>
                            <span class="h-[24px] lg:h-[30px] text-center text-slate-500 text-xl lg:text-2xl font-normal">ثانیه</span>
                          </div>
                        </div>
                      </div>
                      <p class="text-center text-black text-base lg:text-xl font-normal px-4 lg:px-0">
                        آماده دیدار با شما هستیم، لحظات هیجان‌انگیز کافه فلاتر نزدیک است.
                      </p>
                  
            </div>
                 
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    
    </div>




<style>
 .live-section,
  .countdown-section {
    transition: all 0.5s ease-in-out;
  }
  
  .hidden {
    display: none !important;
  }
  
  .opacity-0 {
    opacity: 0 !important;
  }

  /* حالت پیش‌فرض */
  .live-section {
    display: none;
    opacity: 0;
  }

  .countdown-section {
    display: block;
    opacity: 1;
  }

  /* وقتی data-is-live=true است */
  [data-is-live="true"] .countdown-section {
    display: none;
  }
  
  [data-is-live="true"] .live-section {
    display: flex;
    opacity: 1;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 2rem;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 2rem;
    backdrop-filter: blur(5px);
  }

  /* اضافه کردن !important برای اطمینان از اعمال استایل‌ها */
  [data-is-live="true"] .live-section.hidden {
    display: flex !important;
  }

  [data-is-live="true"] .live-section.opacity-0 {
    opacity: 1 !important;
  }

  [data-is-live="true"] .countdown-section.hidden {
    display: none !important;
  }

  [data-is-live="true"] .countdown-section.opacity-0 {
    opacity: 0 !important;
  }
  
  @media (min-width: 1024px) and (max-width: 1440px) {
    div[data-countdown-date] > div {
      width: clamp(6.25rem, 14.62vw - 3.107rem, 9.375rem);
      height: clamp(6.25rem, 14.62vw - 3.107rem, 9.375rem);
    }
    div[data-countdown-date] > div > div > span:first-child {
      font-size: clamp(2rem, -4.1538rem + 9.6154vw, 4.5rem);
    }
    div[data-countdown-date] > div > div > span:last-child {
      font-size: clamp(1rem, -0.2308rem + 1.9231vw, 1.5rem);
    }
    div[data-countdown-date] + p {
      width: clamp(25rem, 0.3846rem + 38.4615vw, 35rem);
    }
  }
</style>

<script>
  interface CountdownElements {
    dayElement: HTMLElement | null;
    hourElement: HTMLElement | null;
    minuteElement: HTMLElement | null;
    secondElement: HTMLElement | null;
  }

  class CountdownTimer {
    private targetDate: Date;
    private elements: CountdownElements;
    private timer: number | null = null;
    private previousValues: { days: string; hours: string; minutes: string; seconds: string };
    private countdownSection: HTMLElement | null;
    private liveSection: HTMLElement | null;

    constructor() {
    // پیدا کردن کانتینر اصلی
    const container = document.getElementById('CafeFlutterCountdown');
    if (!container) {
      console.warn('Countdown container not found, skipping initialization');
      return;
    }
    
    // کانتینر countdown و live
    this.countdownSection = document.querySelector('.countdown-section');
    this.liveSection = document.querySelector('.live-section');

    // تاریخ شروع و پایان را از کانتینر اصلی می‌گیریم
    const startTime = new Date(container.getAttribute('data-event-start') || '');
    const endTime = new Date(container.getAttribute('data-event-end') || '');
    const now = new Date();

    // اگر الان در زمان برگزاری هستیم
    if (now >= startTime && now < endTime) {
      container.setAttribute('data-is-live', 'true');
      this.switchToLiveMode();
      return;
    }

    // پیدا کردن المان‌های countdown
    this.elements = {
      dayElement: document.getElementById('dataCountdownDay'),
      hourElement: document.getElementById('dataCountdownHour'),
      minuteElement: document.getElementById('dataCountdownMinute'),
      secondElement: document.getElementById('dataCountdownSecond'),
    };

  // مقداردهی اولیه برای مقایسه
  this.previousValues = {
    days: '',
    hours: '',
    minutes: '',
    seconds: '',
  };

  // تنظیم تاریخ هدف برای شمارش معکوس
  this.targetDate = startTime;

  // اگر همه المان‌ها به درستی پیدا شدند، شمارنده را شروع می‌کنیم
  if (this.countdownSection && 
      this.elements.dayElement && 
      this.elements.hourElement && 
      this.elements.minuteElement && 
      this.elements.secondElement) {
    this.init();
  } 
}


    private checkLiveStatus(): boolean {
      const container = document.getElementById('CafeFlutterCountdown');
      if (!container) {
        return false; // یا می‌توانیم حذفش کنیم
      }

  const startTime = new Date(container.getAttribute('data-event-start') || '');
  const endTime = new Date(container.getAttribute('data-event-end') || '');
  const now = new Date();


  const isLive = now >= startTime && now < endTime;


  if (isLive) {
    this.switchToLiveMode();
    container.setAttribute('data-is-live', 'true');
  }

  return isLive;
}


  private createLiveElement(): HTMLElement | null {
    const container = document.createElement('div');
    container.className = 'flex flex-col items-center gap-4 p-8 bg-white/50 rounded-[32px] backdrop-blur-[5px] shadow';
    
    // اضافه کردن محتوای مورد نظر
    container.innerHTML = `
      <div class="text-3xl lg:text-4xl font-bold text-slate-700 animate-pulse">
        در حال برگزاری...
      </div>
      <div class="flex flex-col sm:flex-row gap-4">
        ${this.createMeetLink()}
        ${this.createYoutubeLink()}
      </div>
      <p class="text-center text-slate-700 text-base lg:text-xl font-normal px-4 lg:px-0">
        کافه فلاتر شماره ${this.getEventNumber()} در حال برگزاری است
      </p>
    `;

    return container;
  }

  private createMeetLink(): string {
    const meetLink = document.querySelector('[data-meet-link]')?.getAttribute('data-meet-link');
    return meetLink ? `
      <a 
        href="${meetLink}" 
        class="inline-flex items-center justify-center gap-2 px-6 py-3 bg-[#1733B8] text-white rounded-3xl hover:bg-[#142ca3] transition-colors"
        target="_blank"
      >
        <span class="w-5 h-5">
          <svg>...</svg>
        </span>
        <span>پیوستن به جلسه</span>
      </a>
    ` : '';
  }

  private createYoutubeLink(): string {
    const youtubeLink = document.querySelector('[data-youtube-link]')?.getAttribute('data-youtube-link');
    return youtubeLink ? `
      <a 
        href="${youtubeLink}" 
        class="inline-flex items-center justify-center gap-2 px-6 py-3 bg-[#fd6035] text-white rounded-3xl hover:bg-[#e54e26] transition-colors"
        target="_blank"
      >
        <span class="w-5 h-5">
          <svg>...</svg>
        </span>
        <span>تماشا در یوتیوب</span>
      </a>
    ` : '';
  }

  private getEventNumber(): string {
    return document.querySelector('[data-event-number]')?.getAttribute('data-event-number') || '';
  } 

  private switchToLiveMode(): void {
  const countdownSection = document.querySelector('.countdown-section') as HTMLElement;
  const liveSection = document.querySelector('.live-section') as HTMLElement;
  const countdownContainer = document.getElementById('CafeFlutterCountdown');

  
  if (countdownSection && liveSection && countdownContainer) {

    // 1. اول data-is-live را تنظیم می‌کنیم
    countdownContainer.setAttribute('data-is-live', 'true');
    
    // 2. برداشتن کلاس hidden از live section
    liveSection.classList.remove('hidden');
    
    // 3. اجبار browser به reflow
    void liveSection.offsetHeight;
    
    // 4. شروع انیمیشن‌ها
    requestAnimationFrame(() => {
      // اضافه کردن opacity-0 به countdown
      countdownSection.classList.add('opacity-0');
      
      // برداشتن opacity-0 از live section
      liveSection.classList.remove('opacity-0');
      

      // 5. بعد از تمام شدن انیمیشن
      setTimeout(() => {
        // مخفی کردن countdown
        countdownSection.classList.add('hidden');

      }, 500); // زمان انیمیشن transition
    });
  } 
}




  private calculateTimeRemaining(): { total: number; days: number; hours: number; minutes: number; seconds: number } {
      const total = this.targetDate.getTime() - new Date().getTime();
      const seconds = Math.floor((total / 1000) % 60);
      const minutes = Math.floor((total / 1000 / 60) % 60);
      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
      const days = Math.floor(total / (1000 * 60 * 60 * 24));

      return {
        total,
        days: Math.max(0, days),
        hours: Math.max(0, hours),
        minutes: Math.max(0, minutes),
        seconds: Math.max(0, seconds),
      };
    }


    private animateValue(element: HTMLElement, _value: string): void {
      gsap.fromTo(
        element,
        {
          opacity: 0,
          y: 20,
          scale: 0.8,
        },
        {
          opacity: 1,
          y: 0,
          scale: 1,
          duration: 0.4,
          ease: 'back.out(1.7)',
        }
      );
    }

    private updateDisplay(): void {
      const timeRemaining = this.calculateTimeRemaining();

      if (timeRemaining.total <= 0) {
    this.stop();
    this.switchToLiveMode();
    
    const countdownContainer = document.getElementById('CafeFlutterCountdown');
    
    if (countdownContainer) {
      const startTime = new Date(countdownContainer.getAttribute('data-event-start') || '');
      const endTime = new Date(countdownContainer.getAttribute('data-event-end') || '');
      const now = new Date();

      if (now >= startTime && now < endTime) {
        countdownContainer.setAttribute('data-is-live', 'true');
      }
    }
    return;
  }


      // بروزرسانی نمایش زمان
      const currentValues = {
        days: timeRemaining.days.toString(),
        hours: timeRemaining.hours.toString().padStart(2, '0'),
        minutes: timeRemaining.minutes.toString().padStart(2, '0'),
        seconds: timeRemaining.seconds.toString().padStart(2, '0'),
      };

      if (this.elements.dayElement && currentValues.days !== this.previousValues.days) {
        this.elements.dayElement.textContent = currentValues.days;
        this.previousValues.days = currentValues.days;
      }

      if (this.elements.hourElement && currentValues.hours !== this.previousValues.hours) {
        this.elements.hourElement.textContent = currentValues.hours;
        this.previousValues.hours = currentValues.hours;
      }

      if (this.elements.minuteElement && currentValues.minutes !== this.previousValues.minutes) {
        this.elements.minuteElement.textContent = currentValues.minutes;
        this.previousValues.minutes = currentValues.minutes;
      }

      if (this.elements.secondElement && currentValues.seconds !== this.previousValues.seconds) {
        this.elements.secondElement.textContent = currentValues.seconds;
        this.previousValues.seconds = currentValues.seconds;
      }
    }


    private init(): void {
      this.updateDisplay();
      this.timer = window.setInterval(() => this.updateDisplay(), 1000);
    }

    public stop(): void {
      if (this.timer !== null) {
        clearInterval(this.timer);
        this.timer = null;
      }
    }
  }

  // شروع شمارنده هنگام بارگذاری صفحه
  document.addEventListener('DOMContentLoaded', () => {
      new CountdownTimer();
  });


  class BouncingAnimation {
    private arrowElement: HTMLElement | null;

    constructor() {
      this.arrowElement = document.getElementById('downArrowSvg');

      if (!this.arrowElement) {
        throw new Error('Arrow element not found');
      }

      this.init();
    }

    private startBouncing(): void {
      if (!this.arrowElement) return;

      gsap.to(this.arrowElement, {
        y: 20,
        duration: 1,
        ease: 'power1.inOut',
        yoyo: true,
        repeat: -1,
        yoyoEase: 'power2.out',
        onUpdate: () => {
          // افکت اضافی در هنگام حرکت
          const progress = gsap.getProperty(this.arrowElement, 'y') as number;
          const normalizedProgress = progress / 20; // تبدیل به مقدار بین 0 و 1

          // تغییر مقیاس و شفافیت در طول حرکت
          gsap.set(this.arrowElement, {
            scale: 1 + 0.1 * Math.abs(normalizedProgress),
            opacity: 1 - 0.2 * Math.abs(normalizedProgress),
          });
        },
      });
    }

    private init(): void {
      this.startBouncing();
    }

    public destroy(): void {
      if (this.arrowElement) {
        gsap.killTweensOf(this.arrowElement);
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    new BouncingAnimation();
  });
</script>



